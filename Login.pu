@startuml
title Login
actor User as "User - Admin - Partner"
participant LoginScreen
participant AuthRouters
participant AuthControllers
database Database

User -> LoginScreen : 1 : Enter username, password
activate LoginScreen
LoginScreen -> LoginScreen : 2 : Validate input data
activate LoginScreen
deactivate LoginScreen

alt Validate wrong 
    LoginScreen --> User : 3.1 : Show error mesage
else Validate right
    LoginScreen -> AuthRouters : 3 : Request Post Login
    
    activate AuthRouters
    AuthRouters -> AuthControllers : 4 : Call function login
    activate AuthControllers
    AuthControllers -> Database : 5 : Query data
    activate Database
    Database --> AuthControllers : 6 : Return result
    deactivate Database
    AuthControllers -> AuthControllers : 7 : Verify result
    activate AuthControllers
    deactivate AuthControllers
        
    alt Result right
        AuthControllers --> AuthRouters : 8 : Return success message and jwt token
        ' deactivate AuthControllers
        AuthRouters --> LoginScreen : 9 : Return status code 200 and response object
        ' deactivate AuthRouters
        LoginScreen --> User : 10 : Show login successfully mesage
        ' deactivate LoginScreen
        
    else Result wrong
        AuthControllers --> AuthRouters : 8.1 : return fail mesage
        
        deactivate AuthControllers
        AuthRouters --> LoginScreen : 9.1 : Return ststus code 400 and response object
        deactivate AuthRouters
        LoginScreen --> User : 10.1 : show "Login fail" message on the screen
        deactivate LoginScreen

    end
end

@enduml